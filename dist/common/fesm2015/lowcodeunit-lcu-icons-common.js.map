{"version":3,"file":"lowcodeunit-lcu-icons-common.js","sources":["../../../projects/common/src/lib/services/lcu-icons.service.ts","../../../projects/common/src/lib/controls/lcu-icons/lcu-icons.component.ts","../../../projects/common/src/lib/directives/lcu-icons.directive.ts","../../../projects/common/src/lib/services/icons/svg-to-mat-icon.service.ts","../../../projects/common/src/lib/lcu-icons.module.ts","../../../projects/common/src/lib/models/lcu-icons.model.ts","../../../projects/common/src/lib/state/lcu-icons-management-state.context.ts","../../../projects/common/src/lib/state/lcu-icons-management.state.ts","../../../projects/common/src/lib/utils/lcu-icons.utils.ts","../../../projects/common/src/lib/models/svg-to-mat-icon.model.ts","../../../projects/common/src/lowcodeunit-lcu-icons-common.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { LcuIconsModel } from '../models/lcu-icons.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LcuIconsService {\r\n\r\n  constructor() { }\r\n\r\n  public getCardData(): LcuIconsModel[] {\r\n    return [\r\n      {\r\n        LcuIconsId: 1,\r\n        Content: `A coding standard makes sure that all the developers working on the project are following certain specified guidelines.\r\n                  The code can be easily understood and a proper consistency is maintained. Consistency has a positive impact on the\r\n                  quality of the program and one should maintain it while coding. Also, it should be taken care that the guidelines are\r\n                  homogeneously followed across different levels of the system and they do not contradict each other. The finished program\r\n                  code should look like that it has been written by a single developer, in a single session.`,\r\n        Title: 'Angular Style Guide',\r\n        Subtitle: 'Best Practices for Developers to Follow',\r\n        Icon: 'done_all',\r\n        Url: 'https://fathym.visualstudio.com/Documentation/_wiki/wikis/Documentation.wiki/35/Style-Guide-Angular'\r\n      },\r\n      {\r\n        LcuIconsId: 2,\r\n        Content: `A style guide helps to ensure a continuous brand experience. It means that no matter how, when or where a customer\r\n                  experiences a brand, they are experiencing the same underlying traits. It’s this consistency across every touch-point\r\n                  that helps build a brand and brand loyalty. And with 2.4 billion Internet users around the world (and growing), it’s\r\n                  really more critical than ever for businesses to establish a comprehensive style guide.`,\r\n        Title: 'Fathym UI/UX Style Guide',\r\n        Subtitle: `Follow Some of Fathym's Favorite Designs`,\r\n        Icon: 'palette',\r\n        Url: 'https://fathym.visualstudio.com/Documentation/_wiki/wikis/Documentation.wiki/37/Style-Guide-Design'\r\n      },\r\n      {\r\n        LcuIconsId: 3,\r\n        Content: `Fathym’s low-code framework is designed to give developers the freedom and best practice workflows to rapidly create\r\n                  IoT and data-driven applications that are agnostic to tools, platforms and clouds. Each element of the framework is\r\n                  built from Low-Code Units (LCUs) – modular building blocks of code that can be as large as an application, or as\r\n                  small as a data visualization.`,\r\n        Title: `Fathym's Low-Code Framework`,\r\n        Subtitle: `Find More Information About Fathym's IoT Solutions`,\r\n        Icon: 'code',\r\n        Url: 'https://fathym.com/low-code-framework/'\r\n      }\r\n    ];\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LcuIconsModel } from '../../models/lcu-icons.model';\r\n\r\n@Component({\r\n  selector: 'lcu-lcu-icons',\r\n  templateUrl: './lcu-icons.component.html',\r\n  styleUrls: ['./lcu-icons.component.scss']\r\n})\r\nexport class LcuIconsComponent implements OnInit {\r\n\r\n  @Input() public card: LcuIconsModel;\r\n\r\n  @Output() public cardSelected: EventEmitter<any>;\r\n\r\n  constructor() {\r\n    this.cardSelected = new EventEmitter<any>();\r\n  }\r\n\r\n  public ngOnInit(): void { }\r\n\r\n  public SelectCard(url?: string): void {\r\n    this.cardSelected.emit();\r\n\r\n    if (url) {\r\n      window.open(url);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\nimport { ThemeColorPickerService } from '@lcu/common';\r\n\r\n@Directive({\r\n  selector: '[lcu-icons]'\r\n})\r\nexport class LcuIconsDirective implements OnInit {\r\n\r\n  private currentColor: string;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private themeService: ThemeColorPickerService\r\n  ) { }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.hoverEffect(this.getThemeColor(), 'underline');\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.hoverEffect('', 'initial');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.currentColor = this.getThemeColor();\r\n  }\r\n\r\n  private getThemeColor(): string {\r\n    const theme = this.themeService.GetColorClass().value;\r\n    return 'color-swatch-' + theme.substring(theme.indexOf('-') + 1, theme.lastIndexOf('-'));\r\n  }\r\n\r\n  private hoverEffect(color: string, decoration: string): void {\r\n    const title = this.elRef.nativeElement.querySelector('.mat-card-title');\r\n    this.renderer.setStyle(title, 'text-decoration', decoration);\r\n\r\n    if (!color && this.currentColor) {\r\n      this.renderer.removeClass(title, this.currentColor);\r\n    } else if (color !== this.currentColor) {\r\n      this.renderer.removeClass(title, this.currentColor);\r\n    }\r\n\r\n    if (color) {\r\n      this.renderer.addClass(title, color);\r\n      this.currentColor = color;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { SVGToMatIconModel } from '../../models/svg-to-mat-icon.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Registers custom svg icons to use with <mat-icon>\r\n *\r\n * <mat-icon color=\"primary\" svgIcon=\"svgHome\"></mat-icon>\r\n *\r\n * Can use material theme colors when SVG fill property is removed\r\n */\r\n\r\nexport class SvgToMatIconService {\r\n\r\n  \r\n  /**\r\n   * List of icons\r\n   */\r\n  protected icons: Array<SVGToMatIconModel>;\r\n\r\n  constructor(\r\n    protected domSanitizer: DomSanitizer,\r\n    protected matIconRegistry: MatIconRegistry) {\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param icons List of svg icons\r\n    * @param basePath base path to svg icons (/assets/svgs/etc.)\r\n    */\r\n  public SetIcons(icons: Array<SVGToMatIconModel>, basePath: string): void {\r\n\r\n    this.icons = icons;\r\n\r\n    this.icons.forEach((icon: SVGToMatIconModel) => {\r\n      this.matIconRegistry.addSvgIcon(\r\n        icon.Name,\r\n        this.setPath(`${basePath}${icon.IconPath}`));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return list of icons\r\n   */\r\n  public GetIcons(): Array<SVGToMatIconModel> {\r\n    return this.icons;\r\n  }\r\n\r\n  /**\r\n   * Register icon path\r\n   *\r\n   * @param url path to svg\r\n   */\r\n  protected setPath(url: string): SafeResourceUrl  {\r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { LcuIconsService } from './services/lcu-icons.service';\r\nimport { LcuIconsComponent } from './controls/lcu-icons/lcu-icons.component';\r\nimport { LcuIconsDirective } from './directives/lcu-icons.directive';\r\nimport { SvgToMatIconService } from './services/icons/svg-to-mat-icon.service';\r\n\r\n@NgModule({\r\n  declarations: [LcuIconsComponent, LcuIconsDirective],\r\n  imports: [\r\n    FathymSharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [LcuIconsComponent, LcuIconsDirective],\r\n  entryComponents: []\r\n})\r\nexport class LcuIconsModule {\r\n  static forRoot(): ModuleWithProviders<LcuIconsModule> {\r\n    return {\r\n      ngModule: LcuIconsModule,\r\n      providers: [LcuIconsService, SvgToMatIconService]\r\n    };\r\n  }\r\n}\r\n","export class LcuIconsModel {\r\n    public LcuIconsId: number;\r\n    public Content: string;\r\n    public Icon: string;\r\n    public Loading?: boolean;\r\n    public Subtitle: string;\r\n    public Title: string;\r\n    public Url?: string;\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { StateContext } from '@lcu/common';\r\nimport { LcuIconsManagementState } from './lcu-icons-management.state';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LcuIconsManagementStateContext extends StateContext<LcuIconsManagementState> {\r\n\r\n    // Constructors\r\n    constructor(protected injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    \r\n    // API Methods\r\n    public GetLcuIconsById(id: number): void {\r\n        this.Execute({\r\n            Arguments: {\r\n                LcuIconsId: id\r\n            },\r\n            Type: 'GetLcuIconsById'\r\n        });\r\n    }\r\n\r\n    //  Helpers\r\n    protected defaultValue() {\r\n        return { Loading: true } as LcuIconsManagementState;\r\n    }\r\n    \r\n    protected loadStateKey(): string {\r\n        return 'main';\r\n    }\r\n\r\n    protected loadStateName(): string {\r\n        return 'lcu-icons';\r\n    }\r\n}\r\n","export class LcuIconsManagementState {\r\n  \r\n    public Loading?: boolean;\r\n\r\n}\r\n","export class LcuIconsUtils {\r\n\r\n    public static upperLcuIcons(input: string): string {\r\n        return input.toUpperCase();\r\n    }\r\n}\r\n","export class SVGToMatIconModel {\r\n\r\n    /**\r\n     * Icon path - ex. (/home.svg)\r\n     */\r\n    public IconPath: string;\r\n\r\n    /**\r\n     * Icon name\r\n     */\r\n    public Name: string;\r\n\r\n    constructor() { }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './lcu.api';\n"],"names":[],"mappings":"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"}